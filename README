# Excited States Python Analysis for Gaussian QM/MMPol Calculations

## Overview
This script is designed to analyze excited states from Gaussian QM/MMPol log files. It extracts relevant data, such as excitation energies, oscillator strengths, and atomic contributions to molecular orbitals. The processed results are automatically stored in a dedicated `results` directory.

## Features
- **Automatic log file analysis**: Extracts excited states, transitions, and orbital contributions.
- **Structured output**: Saves results in tab-separated `.dat` files for easy processing.
- **Automatic directory management**: All output files are stored in the `results` folder, reducing manual path modifications.
- **User-friendly messages**: Displays welcome and usage information when executed.

## Installation & Requirements
This script is written in Python and requires no additional dependencies beyond a standard Python installation. However, ensure you have the following:
- Python 3.x
- Gaussian log files generated with QM/MMPol calculations

## Usage
Run the script in the same directory where your Gaussian `.log` files are located:
```bash
python qmmmpol_analysis_v40.py
```

### Expected Output
Upon execution, the script creates a `results` folder containing:
- `summary.dat`: A summary of excited states, energy levels, and transitions.
- `excited_states.dat`: Extracted excited states with oscillator strengths.
- `orbital.info`: Atomic contributions to molecular orbitals.
- Additional analysis results, such as `chromo1_Qx.dat`, `chromo1_Qy.dat`, `CT_states.dat`, etc.

## Author
**Renato D. Cunha, PhD**

## Version
**4.0**

## License
This project is available for academic and research purposes. Please cite appropriately if used in publications.

